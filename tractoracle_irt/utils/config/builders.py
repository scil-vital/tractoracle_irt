import os
from tractoracle_irt.utils.utils import get_project_root_dir
from tractoracle_irt.utils.config.params_manager import ParamsManager

class BashScriptBuilder:
    def __init__(self, config, is_local, param_manager: ParamsManager, prepare_dataset_command: str = ""):
        self.config = config
        self.is_local = is_local
        self.param_manager = param_manager
        self.sections = []
        self.prepare_dataset_command = prepare_dataset_command

    def _build_header(self):
        def pre_header():
            return """#!/bin/bash"""

        def core():
            if self.is_local:
                return ""
            else:
                return """
#SBATCH --gres=gpu:1
#SBATCH --cpus-per-task={config["cpus"]}
#SBATCH --mem={config["mem"]}
#SBATCH --time={config["time"]}
#SBATCH --job-name={config["exp_name"]}
#SBATCH --mail-user=jeremi.levesque@usherbrooke.ca
#SBATCH --mail-type=END
#SBATCH --mail-type=FAIL
"""

        def post_header():
            return """
# THIS SCRIPT IS AUTOMATICALLY GENERATED BY submit_experiments.py
# DO NOT EDIT MANUALLY. INSTEAD, MODIFY THE CONFIGURATION FILE.
set -e
"""

        sub_headers = [
            pre_header(),
            core(),
            post_header()
        ]
        self.sections.append("\n".join(sub_headers))

    def _build_setup_comet(self):
        out = ""
        if self.config.get("use_comet", False):
            out = f"export COMET_GIT_DIRECTORY='{get_project_root_dir()}'"
            
            if not os.environ.get("COMET_API_KEY"):
                if not os.path.exists(os.path.expanduser("~/.comet_api_key")):
                    raise FileNotFoundError("COMET_API_KEY not found. Please create a file at ~/.comet_api_key with your API key.")
                else:
                    out += "\nexport COMET_API_KEY=$(cat ~/.comet_api_key)"
        return out


    def _build_setup(self):
        cluster_setup = ""
        if not self.is_local:
            cluster_setup = f"""
echo "Loading modules and virtual env..."
module load StdEnv/2020
module load nextflow/21.10.3
module load apptainer/1.1.8
module load python/3.10 cuda cudnn httpproxy
source ~/tractoracle_irt/venv/bin/activate

# Prepare directories
mkdir -p $SLURM_TMPDIR/data
mkdir -p $SLURM_TMPDIR/experiments

# Extract dataset
echo "Preparing {self.config['dataset_name']} dataset..."
{self.prepare_dataset_command}
"""
        setup_comet = self._build_setup_comet()
        self.sections.append("\n".join([
            cluster_setup,
            setup_comet,
            f"DEST_FOLDER=\"{self.config['dest_folder']}\"",
            "mkdir -p $DEST_FOLDER"
        ]))
    
    def _build_execution(self):
        self.sections.append(self.param_manager.compile_command())

    def _build_post_execution(self):
        self.sections.append(f"""echo "Experiment available on {self.config["dest_folder"]}""")

    def build_script(self):
        self._build_header()
        self._build_setup()
        self._build_execution()
        self._build_post_execution()
        return "\n\n".join(self.sections)
